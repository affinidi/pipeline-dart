name: release
on:
  workflow_call:
    inputs:
      dart-sdk-version:
        type: string
        required: false
        default: '3.6'
jobs:
  wiz-scan:
    uses: affinidi/pipeline-security/.github/workflows/wizcli-dirscan.yml@main
    secrets: inherit
  build:
    runs-on: ubuntu-latest
    environment: main
    concurrency: release
    if: ${{ !contains(github.event.head_commit.message, 'chore(release)') }}
    steps:
      - name: Generate token from app token #https://github.com/tibdex/github-app-token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.RELEASE_BOT_APP_ID }}
          private_key: ${{ secrets.RELEASE_BOT_PKEY }}
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}
      - name: configure git
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
      # Note: This workflow uses the latest stable version of the Dart SDK.
      # You can specify other versions if desired, see documentation here:
      # https://github.com/dart-lang/setup-dart/blob/main/README.md
      - uses: dart-lang/setup-dart@v1.7.1
        with:
          sdk: ${{ inputs.dart-sdk-version }}
      - uses: bluefireteam/melos-action@v3
        with:
          run-versioning: true
          publish-dry-run: true
          tag: true
          create-pr: false
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
      - name: Push Tags
        run: git push --follow-tags
