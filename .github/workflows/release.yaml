name: release
on:
  workflow_call:
    inputs:
      flutter-version:
        type: string
        required: false
        default: '3.32.4'
      repo-path:
        required: false
        default: '.'
        type: string

jobs:
  dart-scan:
    uses: affinidi/pipeline-security/.github/workflows/dart-scanner.yml@main
    with:
      repo-path: ${{ inputs.repo-path }}
      flutter-version: ${{ inputs.flutter-version }}
    secrets: inherit
  build:
    needs: [dart-scan]
    runs-on: ubuntu-latest
    environment: main
    concurrency: release
    if: ${{ !contains(github.event.head_commit.message, 'chore(release)') }}
    steps:
      - name: Generate token from app token #https://github.com/tibdex/github-app-token
        id: generate_token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.RELEASE_BOT_APP_ID }}
          private-key: ${{ secrets.RELEASE_BOT_PKEY }}
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}
      - name: configure git
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
      # Note: This workflow uses the latest stable version of the Flutter+Dart SDK.
      # You can specify other versions if desired, see documentation here:
      # https://github.com/flutter-actions/setup-flutter/blob/main/README.md
      - uses: flutter-actions/setup-flutter@v3
        with:
          channel: stable
          version: ${{ inputs.flutter-version }}
      - uses: bluefireteam/melos-action@v3
        with:
          run-versioning: true
          publish-dry-run: true
          tag: true
          create-pr: false
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
      - name: Push Tags
        run: git push --follow-tags
